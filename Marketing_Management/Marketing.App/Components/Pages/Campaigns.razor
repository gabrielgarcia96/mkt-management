@page "/campaigns"

@using Marketing.App.Security
@using Marketing.Application.Interfaces
@using Marketing.Domain.Models
@using Radzen

@inject ICampaignService CampaignService
@inject LanguageService LangService
@inject ICustomerService CustomerService
<style>
    .matrix-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    }

    .matrix-modal {
    background-color: black;
    border: 2px solid #00FF00;
    padding: 20px;
    width: 500px;
    color: #00FF00;
    border-radius: 8px;
    }

    .form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 16px;
    }

    .form-grid-item {
    display: flex;
    flex-direction: column;
    }
</style>

<h2 style="color:#00FF00;">@Loc.Get("CampaignsTitle", currentLeanguage)</h2>

<RadzenButton Text="@Loc.Get("NewCampaignButton", currentLeanguage)" ButtonStyle="ButtonStyle.Success" Click="@(() => ShowForm(new Campaign()))" Style="margin-bottom: 10px;" />

@if (showForm)
{
    <div class="matrix-modal-overlay">
        <div class="matrix-modal">
            <h3 style="color: #00FF00;">Register/Edit Campaign</h3>

            <EditForm Model="@campaign" OnValidSubmit="@Save">
                <div class="form-grid">
                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">@Loc.Get("CampaignNameLabel", currentLeanguage)</RadzenText>
                        <RadzenTextBox @bind-Value="campaign.Name" Style="width: 100%;" />
                    </div>

                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">@Loc.Get("DescriptionLabel", currentLeanguage)</RadzenText>
                        <RadzenTextBox @bind-Value="campaign.Description" Style="width: 100%;" />
                    </div>

                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">@Loc.Get("StartDateLabel", currentLeanguage)</RadzenText>
                        <RadzenDatePicker @bind-Value="campaign.StartDate" Style="width: 100%;" />
                    </div>

                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">@Loc.Get("EndDateLabel", currentLeanguage)</RadzenText>
                        <RadzenDatePicker @bind-Value="campaign.EndDate" Style="width: 100%;" />
                    </div>

                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">Empresa</RadzenText>
                        <RadzenDropDown @bind-Value="campaign.CustomerId"
                                        Data="@companies"
                                        TextProperty="Name"
                                        ValueProperty="Id"
                                        Change="@(args => SetCustomerName(args))"
                                        Style="width: 100%;"
                                        Placeholder="Selecione a empresa" />
                    </div>

                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">Cor da campanha</RadzenText>
                         <RadzenColorPicker @bind-Value="campaign.ThemeColor" Style="width: 30%; margin-top: 5px;" />
                       
                    </div>

                    <div class="form-grid-item" style="grid-column: span 2;">
                        <RadzenCheckBox @bind-Value="campaign.IsActive" />
                        <label style="color: #00FF00; margin-left: 10px;">Active</label>
                    </div>
                </div>

                <RadzenButton Text="@Loc.Get("SaveButton", currentLeanguage)" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success" Style="margin-top: 10px;" />
                <RadzenButton Text="@Loc.Get("CancelButton", currentLeanguage)" ButtonStyle="ButtonStyle.Light" Click="@(() => showForm = false)" Style="margin-top: 10px; margin-left: 10px;" />
            </EditForm>
        </div>
    </div>
}

<RadzenDataGrid Data="@campaigns" TItem="Campaign" AllowPaging="true" PageSize="10" Style="margin-top: 20px;" ColumnWidth="100px">
    <Columns>
        <RadzenDataGridColumn Property="Name" Title="@Loc.Get("CampaignNameLabel", currentLeanguage)" Width="120px" />

        <RadzenDataGridColumn Property="Description" Title="@Loc.Get("DescriptionLabel", currentLeanguage)" Width="150px">
            <Template Context="c">
                <span style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; display: block; max-width: 140px;">
                    @c.Description
                </span>
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="CustomerName" Title="Empresa" Width="120px" />

        <RadzenDataGridColumn Title="Cor" Width="60px">
            <Template Context="c">
                <div style="width: 20px; height: 20px; border-radius: 3px; background-color: @c.ThemeColor; border: 1px solid #ccc;"></div>
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="StartDate" Title="@Loc.Get("StartDateLabel", currentLeanguage)" Width="100px">
            <Template Context="c">@c.StartDate.ToShortDateString()</Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="EndDate" Title="@Loc.Get("EndDateLabel", currentLeanguage)" Width="100px">
            <Template Context="c">@c.EndDate.ToShortDateString()</Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="IsActive" Title="Ativo" Width="70px" />

        <RadzenDataGridColumn Title="Ações" Width="100px">
            <Template Context="c">
                <RadzenButton Icon="edit" Size="ButtonSize.Small" Style="margin-right: 4px;" Click="@(() => ShowForm(c))" />
                <RadzenButton Icon="delete" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Danger" Click="@(() => Delete(c.Id))" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>




@code {
    private List<Campaign> campaigns = new();
    private Campaign campaign = new();
    private bool showForm = false;
    private string currentLeanguage => LangService.CurrentLanguage;
    private List<Customer> companies = new();
    private bool showColorPicker = false;

    protected override async Task OnInitializedAsync()
    {
        LangService.OnLanguageChanged += LanguageChanged;
        companies = await CustomerService.GetAllCustomersAsync();
        campaigns = await CampaignService.GetAllAsync();
    }

    private async Task Save()
    {
        if (string.IsNullOrEmpty(campaign.Id))
        {
            await CampaignService.CreateAsync(campaign);
        }
        else
        {
            await CampaignService.UpdateAsync(campaign.Id, campaign);
        }

        campaigns = await CampaignService.GetAllAsync();
        showForm = false;
    }

    private void ShowForm(Campaign c)
    {
        campaign = new Campaign
            {
                Id = c.Id,
                Name = c.Name,
                Description = c.Description,
                StartDate = c.StartDate,
                EndDate = c.EndDate,
                IsActive = c.IsActive
            };
        showForm = true;
    }

    private async Task Delete(string id)
    {
        await CampaignService.DeleteAsync(id);
        campaigns = await CampaignService.GetAllAsync();
    }

    private void LanguageChanged()
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        LangService.OnLanguageChanged -= LanguageChanged;
    }

    private void SetCustomerName(object selectedId)
    {
        var selectedCompany = companies.FirstOrDefault(c => c.Id == selectedId?.ToString());
        if (selectedCompany != null)
        {
            campaign.CustomerName = selectedCompany.Name;
        }
    }
}
