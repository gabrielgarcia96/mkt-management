@page "/campaigns"

@using Marketing.Application.Interfaces
@using Marketing.Domain.Models
@using Radzen

@inject ICampaignService CampaignService

<style>
    .matrix-modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .matrix-modal {
        background-color: black;
        border: 2px solid #00FF00;
        padding: 20px;
        width: 500px;
        color: #00FF00;
        border-radius: 8px;
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    .form-grid-item {
        display: flex;
        flex-direction: column;
    }
</style>

<h2 style="color:#00FF00;">Campaigns</h2>

<RadzenButton Text="New Campaign" ButtonStyle="ButtonStyle.Success" Click="@(() => ShowForm(new Campaign()))" Style="margin-bottom: 10px;" />

@if (showForm)
{
    <div class="matrix-modal-overlay">
        <div class="matrix-modal">
            <h3 style="color: #00FF00;">Register/Edit Campaign</h3>

            <EditForm Model="@campaign" OnValidSubmit="@Save">
                <div class="form-grid">
                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">Name:</RadzenText>
                        <RadzenTextBox @bind-Value="campaign.Name" Style="width: 100%;" />
                    </div>

                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">Description:</RadzenText>
                        <RadzenTextBox @bind-Value="campaign.Description" Style="width: 100%;" />
                    </div>

                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">Start Date:</RadzenText>
                        <RadzenDatePicker @bind-Value="campaign.StartDate" Style="width: 100%;" />
                    </div>

                    <div class="form-grid-item">
                        <RadzenText Style="color: #fff; font-weight: bold;">End Date:</RadzenText>
                        <RadzenDatePicker @bind-Value="campaign.EndDate" Style="width: 100%;" />
                    </div>

                    <div class="form-grid-item" style="grid-column: span 2;">
                        <RadzenCheckBox @bind-Value="campaign.IsActive" />
                        <label style="color: #00FF00; margin-left: 10px;">Ativa</label>
                    </div>
                </div>

                <RadzenButton Text="Save" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success" Style="margin-top: 10px;" />
                <RadzenButton Text="Cancel" ButtonStyle="ButtonStyle.Light" Click="@(() => showForm = false)" Style="margin-top: 10px; margin-left: 10px;" />
            </EditForm>
        </div>
    </div>
}

<RadzenDataGrid  Data="@campaigns" TItem="Campaign" AllowPaging="true" PageSize="10" Style="margin-top: 20px;" ColumnWidth="200px">
    <Columns>
        <RadzenDataGridColumn Property="Name" Title="Name" />
        <RadzenDataGridColumn Property="Description" Title="Description" />
        <RadzenDataGridColumn Property="StartDate" Title="Start Date">
            <Template Context="c">@c.StartDate.ToShortDateString()</Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="EndDate" Title="End Date">
            <Template Context="c">@c.EndDate.ToShortDateString()</Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="IsActive" Title="Active" />
        <RadzenDataGridColumn Title="Actions">
            <Template Context="c">
                <RadzenButton Icon="edit" Text="Editar" Click="@(() => ShowForm(c))" Style="margin-right: 5px;" />
                <RadzenButton Icon="delete" Text="Excluir" ButtonStyle="ButtonStyle.Danger" Click="@(() => Delete(c.Id))" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    private List<Campaign> campaigns = new();
    private Campaign campaign = new();
    private bool showForm = false;

    protected override async Task OnInitializedAsync()
    {
        campaigns = await CampaignService.GetAllAsync();
    }

    private async Task Save()
    {
        if (string.IsNullOrEmpty(campaign.Id))
        {
            await CampaignService.CreateAsync(campaign);
        }
        else
        {
            await CampaignService.UpdateAsync(campaign.Id, campaign);
        }

        campaigns = await CampaignService.GetAllAsync();
        showForm = false;
    }

    private void ShowForm(Campaign c)
    {
        campaign = new Campaign
            {
                Id = c.Id,
                Name = c.Name,
                Description = c.Description,
                StartDate = c.StartDate,
                EndDate = c.EndDate,
                IsActive = c.IsActive
            };
        showForm = true;
    }

    private async Task Delete(string id)
    {
        await CampaignService.DeleteAsync(id);
        campaigns = await CampaignService.GetAllAsync();
    }
}
